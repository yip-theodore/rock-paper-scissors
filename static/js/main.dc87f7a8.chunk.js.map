{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","components/rock-paper-scissors/Play.js","components/utils/Cover.js","assets/img/sandwich.jpg","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Play","games","useState","p","setP","bet","setBet","onSubmit","e","preventDefault","play","undefined","parseNearAmount","type","value","onChange","label","disabled","map","entry","tie","win","loss","result","from","rel","played","Cover","name","coverImg","style","background","minHeight","Button","defaultProps","client","createClient","url","App","setGames","balance","setBalance","getGames","query","toPromise","data","getBalance","useCallback","useEffect","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch","console","error"],"mappings":"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","file":"static/js/main.dc87f7a8.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"rock-paper-scissors.yip-theodore.testnet\";\n\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\":\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\":\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;\n","import environment from \"./config\";\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst nearEnv = environment(\"testnet\");\n\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      // List here all view methods\n      viewMethods: [\"getHistory\"],\n      // List call methods that change state\n      changeMethods: [\"play\"],\n    }\n  );\n}\n\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\n\nconst Wallet = ({ address, amount, symbol, login, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {amount} <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">{address}</span>\n              </Stack>\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return (\n    <button onClick={login} className='btn border rounded-pill py-1'>\n      Connect wallet\n    </button>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import React, { useState, useEffect } from 'react'\nimport { parseNearAmount, formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst Play = ({ games, login }) => {\n  const [p, setP] = useState(null)\n  const [bet, setBet] = useState('0.1')\n  // const [history, setHistory] = useState([])\n  // useEffect(() => {\n  //   window.contract.getHistory().then(setHistory)\n  // }, [])\n  return (\n    <>\n      <h2 className='ms-2 text-warning mb-3'>Rock / paper / scissors</h2>\n      <form className='d-flex pb-3' onSubmit={e => {\n        e.preventDefault()\n        if (login) {\n          login()\n        } else {\n          window.contract.play({ p }, undefined, parseNearAmount(bet))\n        }\n      }}>\n        <div className='ms-2 btn-group'>\n          <button onClick={() => setP(0)} className={`btn ${p === null ? 'btn-outline-light' : p === 0 ? 'btn-light' : 'opacity-25'}`} type='button'>🤛</button>\n          <button onClick={() => setP(1)} className={`btn ${p === null ? 'btn-outline-light' : p === 1 ? 'btn-light' : 'opacity-25'}`} type='button'>🖐</button>\n          <button onClick={() => setP(2)} className={`btn ${p === null ? 'btn-outline-light' : p === 2 ? 'btn-light' : 'opacity-25'}`} type='button'>✌️</button>\n        </div>\n        <select value={bet} onChange={e => setBet(e.target.value)} className='ms-2 form-select form-select-sm w-auto'>\n          <option value='0.1' label='0.1 NEAR' />\n          <option value='0.2' label='0.2 NEAR' />\n          <option value='0.3' label='0.3 NEAR' />\n        </select>\n        <button className='ms-2 btn btn-warning' type='submit' disabled={!login && p === null}>{login ? 'connect' : 'play'}</button>\n      </form>\n      <ul className='mt-3'>\n        {games.map(entry => (\n          <li className='lh-sm mb-2' key={entry.id}>\n            {{\n              tie: '😬', win: '🥳', loss: '😢'\n            }[entry.result]}&nbsp; <a href={`https://explorer.testnet.near.org/accounts/${entry.from.id}`} target='_blank' rel='noreferrer'>{entry.from.id || 'somebody'}</a> {{\n              tie: 'bet', win: 'won', loss: 'lost'\n            }[entry.result]} <code>{formatNearAmount(entry.bet)} NEAR</code>&nbsp; playing {[\n              '🤛', '🖐', '✌️'\n            ][entry.played]}&nbsp; against {[\n              '🤛', '🖐', '✌️'\n            ][ (3 + entry.played + { tie: 0, win: -1, loss: 1 }[entry.result]) % 3 ]}\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default Play","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ name, login, coverImg }) => {\n  if ((name, login, coverImg)) {\n    return (\n      <div\n        className=\"d-flex justify-content-center flex-column text-center \"\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\n      >\n        <div className=\"mt-auto text-light mb-5\">\n          {/* <div\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\n            style={{ maxWidth: \"320px\" }}\n          >\n            <img src={coverImg} alt=\"\" />\n          </div> */}\n          <h1 className=\"text-body\">{name}</h1>\n          <p className=\"text-secondary\">Please connect your wallet to continue.</p>\n          <Button\n            onClick={login}\n            variant=\"outline-light\"\n            className=\"rounded-pill px-3 mt-3\"\n          >\n            Connect Wallet\n          </Button>\n        </div>\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nCover.propTypes = {\n  name: PropTypes.string,\n};\n\nCover.defaultProps = {\n  name: \"\",\n};\n\nexport default Cover;\n","export default __webpack_public_path__ + \"static/media/sandwich.2d312449.jpg\";","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { createClient } from 'urql'\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\nimport Wallet from \"./components/Wallet\";\nimport { Notification } from \"./components/utils/Notifications\";\nimport Play from \"./components/rock-paper-scissors/Play\"\nimport Cover from \"./components/utils/Cover\";\nimport coverImg from \"./assets/img/sandwich.jpg\";\nimport \"./App.css\";\n\nconst client = createClient({ url: 'https://api.thegraph.com/subgraphs/id/QmTkwkWEjEksXyF8KNqANr1WsV9TpsFo4houc3SyojuoEp' })\n\nconst App = function AppWrapper() {\n  const account = window.walletConnection.account();\n\n  const [games, setGames] = useState([]);\n  const [balance, setBalance] = useState(\"0\");\n\n  const getGames = async () => {\n    const { data } = await client.query(`\n      {\n        games(orderBy: timestamp, orderDirection: desc) {\n          id\n          from {\n            id\n          }\n          played\n          result\n          bet\n          timestamp\n        }\n      }\n    `).toPromise()\n    window.games = data.games\n    setGames(window.games)\n  }\n\n  const getBalance = useCallback(async () => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  });\n\n  useEffect(() => {\n    getGames()\n    getBalance();\n  }, [getBalance]);\n\n  return (\n    <>\n      <Notification />\n      <Container fluid=\"md\">\n        <Nav className=\"justify-content-end pt-3 pb-5\">\n          <Nav.Item>\n            <Wallet\n              address={account.accountId}\n              amount={balance}\n              symbol=\"NEAR\"\n              login={login}\n              destroy={destroy}\n            />\n          </Nav.Item>\n        </Nav>\n        <main>\n          <Play games={games} login={!account.accountId && login} />\n        </main>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();\n"],"sourceRoot":""}